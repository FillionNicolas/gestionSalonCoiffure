package com.clientui.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.clientui.beans.AvisBean;
import com.clientui.beans.ReclamationBean;
import com.clientui.beans.UtilisateurBean;
import com.clientui.proxies.MicroServiceReclamationProxies;
import com.clientui.proxies.MicroServiceUtilisateurProxies;

@CrossOrigin
@RestController
public class ClientController {
	
	@Autowired
	private MicroServiceReclamationProxies microServiceReclamationProxies;
	
	@Autowired
	private MicroServiceUtilisateurProxies microServiceUtilisateurProxies;
	
	//microserviceReclamation
	@RequestMapping("/avis")
	public String avis(Model model) {
		List<AvisBean> avis = microServiceReclamationProxies.findAllAvis();
		model.addAttribute("avis", avis);
		return "Avis";
	}
	
	@RequestMapping("/reclamation")
	public String reclamation(Model model) {
		List<ReclamationBean> reclamation = microServiceReclamationProxies.findAllReclamation();
		model.addAttribute("reclamation", reclamation);
		return "Reclamation";
	}
	
	//microserviceUtilisateur
	
//	@RequestMapping("/utilisateur")
//	public String utilisateur(Model model) {
//		List<UtilisateurBean> utilisateur = microServiceUtilisateurProxies.findAllUtilisateur();
//		model.addAttribute("utilisateur", utilisateur);
//		return "Utilisateur";
//	}
	
	@GetMapping("/utilisateurs")
	public List<UtilisateurBean> getUtilisateurs() {
		return microServiceUtilisateurProxies.findAllUtilisateur();
	}
	
	@GetMapping("/utilisateurs/{id}")
	public UtilisateurBean findUtilisateur(@PathVariable("id") Long id) {
		return microServiceUtilisateurProxies.findOneUtilisateur(id);
	}
	
	@PostMapping("/utilisateurs")
	public UtilisateurBean saveUtilisateur(@RequestBody UtilisateurBean utilisateur) {
		return microServiceUtilisateurProxies.saveUtilisateur(utilisateur);
	}
	
	
}
